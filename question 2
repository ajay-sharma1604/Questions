39) Find the Lcm of two numbers

import java.util.Scanner;
public class Basics{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter num1");
        int num1=sc.nextInt();
        System.out.println("Enter num2");
        int num2=sc.nextInt();
        int max=num1>num2 ?num1:num2;
        int lcm=max;
        while(true){
            if(lcm%num1==0 && lcm%num2==0){
                System.out.println("lcm is:" + " " + lcm);
                break;
            }
            lcm += max;
        }

    }
}

---------------40) Find the sum of series 1 + 11 + 111 + 1111 ...n terms


import java.util.Scanner;
 public class Basics{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int result= 0;
        int sum = 0;
        int n=sc.nextInt();
        for(int i=0;i<n;i++){
            int power= (int)Math.pow(10, i);
            result =result + power;
            sum=sum+result;
            System.out.print(result + " " );
            if(i<n-1){
                System.out.print("+");
            }
        }
        System.out.println();
        System.out.println("sum is :- " + sum);
    }
}

41)Accept array elements and reprint it

import java.util.Scanner;
public class Basics{

    //taking input

    public static void input   arr(int arr[]){
        Scanner sc =new Scanner(System.in);
        for(int i=0;i<arr.length;i++){
            arr[i]= sc.nextInt();
        }
        printarr(arr);
    }

    //printing array
    public static void printarr(int arr[]) {
        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i] + " ");
        }
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Please enter size");
        int arr[] = new int[sc.nextInt()];
        inputarr(arr);

    }
}

42)Print array elements in reverse order

import java.util.Scanner;
public class Basics{

    public static void inputarr(int arr[]){
        Scanner sc =new Scanner(System.in);
        for(int i=0;i<arr.length;i++){
            arr[i]= sc.nextInt();
        }
        printrevarr(arr);
    }

    public static void printrevarr(int arr[]) {
        for(int i=arr.length-1;i>=0;i--){
            System.out.print(arr[i] + " ");
        }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Please enter size");
        int arr[] = new int[sc.nextInt()];
        inputarr(arr);
    }
}

43) Print positive and negative elements of an array

import java.util.Scanner;
public class Basics{

    public static void inputarr(int arr[]){
        Scanner sc =new Scanner(System.in);
        for(int i=0;i<arr.length;i++){
            arr[i]= sc.nextInt();
        }
        printsignedarr(arr);
    }

    public static void printsignedarr(int arr[]) {
        System.out.print("Positive numbers : " );
        for(int i=0;i<arr.length;i++){
            if(arr[i] > 0){
                System.out.print(arr[i]);
                if(i<arr.length-1){
                    System.out.print(",");
                }
            }
        }
        System.out.println();
        System.out.print("Negative numbers : " );
        for(int i=0;i<arr.length;i++){
            if(arr[i] < 0){
                System.out.print(arr[i]);
                if(i<arr.length-1){
                    System.out.print(",");
                }
            }
          
        }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Please enter size");
        int arr[] = new int[sc.nextInt()];
        inputarr(arr);
    }
}


//Dry run this

import java.util.Scanner;

public class Basics {

    public static void inputarr(int arr[]) {
        Scanner sc = new Scanner(System.in);
        for (int i = 0; i < arr.length; i++) {
            arr[i] = sc.nextInt();
        }
        printsignedarr(arr);
    }

    public static void printsignedarr(int arr[]) {
        System.out.print("Positive numbers: ");
        int positiveCount = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] > 0) {
                if (positiveCount > 0) {
                    System.out.print(",");
                }
                System.out.print(arr[i]);
                positiveCount++;
            }
        }
        System.out.println();

        System.out.print("Negative numbers: ");
        int negativeCount = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] < 0) {
                if (negativeCount > 0) {
                    System.out.print(",");
                }
                System.out.print(arr[i]);
                negativeCount++;
            }
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Please enter size");
        int arr[] = new int[sc.nextInt()];
        inputarr(arr);
    }
}

44) Print array in ascending and descending order

import java.util.Scanner;
public class Basics{
    public static void main(String[] args) {
        int arr[] = {5,4,1,3,2};
        for(int turn=0;turn<arr.length-1;turn++){

            for(int j =0;j<arr.length-1-turn;j++){

                //swap adjacent elements
                if(arr[j] > arr[j+1]){
                    int temp =arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1] = temp;
                }
            }

        //ascending order
        for(int i = 0;i<arr.length ; i++){
            System.out.print(arr[i] + " ");
        }
        System.out.println();

        //descending order
        for(int i=arr.length-1;i>=i;i--){
            System.out.print(arr[i] + " ");
        }
    }
}
}


45) take size from user, make array ,take input from user, sum in this manner: 10+20+30 = 60

import java.util.Scanner;
public class Basics{

    //taking input
    public static void input(int arr[]){
        for(int i=0;i<arr.length;i++){
            Scanner sc = new Scanner(System.in);
            arr[i]=sc.nextInt();
        }
        sum(arr);
    }

    //sum of array
    public static void sum(int arr[]) {
        int sum = 0;
        for(int i=0; i<arr.length; i++){
            System.out.print(arr[i]+" ");
            if(i<arr.length-1){
                System.out.print("+" + " ");
            }
            sum =sum + arr[i];
        }
        System.out.print("=" + " ");
        System.out.print(sum);

    }
    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);
        System.out.println("Enter size");
        //creating n size array
        int arr[] = new int[sc.nextInt()];
        input(arr);
    }
}

46) Mean of the array

import java.util.Scanner;
public class Basics{

    public static void meanarr(int arr[]){
        int sum = 0;
        for(int i=0;i<arr.length;i++){
            sum =sum + arr[i];
        }
        float mean = (sum/arr.length);
        System.out.println("Mean :" + "=" + mean);
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int arr[] = new int[sc.nextInt()];
        for(int i=0;i<arr.length;i++){
            arr[i] = sc.nextInt();
        }
        meanarr(arr);
    }
}

47)Find greatest element and print its index too

import java.util.Scanner;
public class Basics{

    public static void greatestelement(int arr[]){
        int max =arr[0];
        int index= 0;
        for(int i=1;i<arr.length;i++){
            if(arr[i]>max){
                max =arr[i];
                index=i;
            }
        }
        System.out.print("Max Element = " + max + " "+"Found at Index : " + index );
        
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int arr[] = new int[sc.nextInt()];
        for(int i=0;i<arr.length;i++){
            arr[i] = sc.nextInt();
        }
        greatestelement(arr);
    }
}

48)Find the smallest element and print its index too

import java.util.Scanner;
public class Basics{

    public static void smallestelement(int arr[]){
        int min =arr[0];
        int index= 0;
        for(int i=1;i<arr.length;i++){
            if(arr[i]<min){
                min =arr[i];
                index=i;
            }
        }
        System.out.print("Min Element = " + min + " "+"Found at Index : " + index );
        
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int arr[] = new int[sc.nextInt()];
        for(int i=0;i<arr.length;i++){
            arr[i] = sc.nextInt();
        }
        smallestelement(arr);
    }
}

49) Find the second Greatest element

import java.util.Scanner;
public class Basics{

    public static void greatestelement(int arr[]){
        int max =arr[0];
        int secondmax=0;
        for(int i=1;i<arr.length;i++){
            if(arr[i]>max){
                max =arr[i];
            }
        }
        for(int i=0;i<arr.length;i++){
            if(secondmax<arr[i] && arr[i]<max){
                secondmax = arr[i];
            }
        }
        System.out.print("Second Greatest Element = " + secondmax);
        
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int arr[] = new int[sc.nextInt()];
        for(int i=0;i<arr.length;i++){
            arr[i] = sc.nextInt();
        }
        greatestelement(arr);
    }
}

50) Palindromic array

import java.util.Scanner;
public class Basics{

    public static boolean palindromicarr(int arr[]){
      int start = 0;
      int end = arr.length-1;
      while(start<end){
        //false condtion check
        if(arr[start]!= arr[end]){
            return false;
        }
        else{
            start++;
            end--;
        }
      }
      return true;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int arr[] = new int[sc.nextInt()];
        for(int i=0;i<arr.length;i++){
            arr[i] = sc.nextInt();
        }
        boolean result=palindromicarr(arr);
        System.out.println(result);
    }
}


51) Left Rotation Of Array By 1

import java.util.Scanner;
public class Basics{

    public static void leftrotationarr(int arr[]){
       int temp=arr[0];
       for(int i =0; i<arr.length-1;i++){
        arr[i] = arr[i+1];
       }
       arr[arr.length-1] = temp;

       //printing array
       for(int i=0;i<arr.length;i++){
        System.out.print(arr[i] + " ");
       }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter size");
        int arr[] = new int[sc.nextInt()];
        for(int i=0;i<arr.length;i++){
            arr[i] = sc.nextInt();
        }
        leftrotationarr(arr);
       
    }
}


52) Right Rotation of Array By 1


import java.util.Scanner;
public class Basics{

    public static void rightrotationarr(int arr[]){
       int temp=arr[arr.length-1];
       for(int i =arr.length-1; i>0;i--){
        arr[i] = arr[i-1];
       }
       arr[0] = temp;

       //printing array
       for(int i=0;i<arr.length;i++){
        System.out.print(arr[i] + " ");
       }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter size");
        int arr[] = new int[sc.nextInt()];
        for(int i=0;i<arr.length;i++){
            arr[i] = sc.nextInt();
        }
        rightrotationarr(arr);
       
    }
}


53) Right Rotation of array by k elements

import java.util.Scanner;

public class Basics {

    public static void rightRotateK(int arr[],int k){
        int n=arr.length;
        k = k%n; //adjusting k when k >n
        reversearray(arr,0,n-1); //full array reverse
        reversearray(arr, 0, k-1); //first half reverse
        reversearray(arr, k, n-1); //seconf half reverse
        printarr(arr);
        
    }

    public static void reversearray(int arr[] , int start, int end){
        while(start<end){
            int temp =arr[end];
            arr[end] =arr[start];
            arr[start] = temp;
            start++;
            end--;
        }
    }

    public static void printarr(int arr[]){
        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i]+" ");        
        }
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter array size");
        int arr[] = new int[sc.nextInt()];
        System.out.println("Enter array elements:");
        for (int i = 0; i < arr.length; i++) {
            arr[i] = sc.nextInt();
        }
        System.out.println("Enter k");
        int k = sc.nextInt();
        rightRotateK(arr, k);
    }
}

54) Left Rotate by K elemennts

import java.util.Scanner;
public class Basics{

     public static void leftRotatek(int arr[],int k){
          int n = arr.length;
          k=k%n;
          reverseArray(arr, 0 , k-1);
          System.out.println("first: Reverse full array ");
          printArray(arr);
          System.out.println();
          reverseArray(arr, k , n-1);
          System.out.println("second: Reverse initial half upto k-1");
          printArray(arr);
          System.out.println();
          reverseArray(arr, 0, n-1);
          System.out.println("Final output: Reverse other half of array");
          printArray(arr);
     }

     public static void reverseArray(int arr[] ,int start, int end ){
          while(start<end){
               int temp = arr[end];
               arr[end] = arr[start];
               arr[start]= temp;
               start++;
               end--;
          }
         
     }

     public static void printArray(int arr[]){
          for(int i=0;i<arr.length;i++){
               System.out.print(arr[i] +" ");
          }
     }
     public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter array size");
        int arr[] = new int[sc.nextInt()];
        System.out.println("Enter array elements");
        for(int i=0;i<arr.length;i++){
          arr[i] =sc.nextInt();
        }
        System.out.println("Enter k");
        int k =sc.nextInt();
     
        leftRotatek(arr,k);

     }
}


55) Linear Search an array(if element found print index ,otherwise -1)

import java.util.Scanner;
public class Basics{

     public static void linearsearch(int arr[] , int k){
          for(int i=0;i<arr.length;i++){
               if(k==arr[i]){
                    System.out.println(i); 
                    return;
               }
          }
          System.out.println(-1);
     }
     public static void main(String[] args){
          Scanner sc = new Scanner(System.in);
          System.out.println("Enter array size");
          int arr[] = new int[sc.nextInt()];
          System.out.println("Enter array elements");
          for(int i=0;i<arr.length;i++){
               arr[i] = sc.nextInt();
          }
          System.out.println("Enter key value");
          int k= sc.nextInt();
          linearsearch(arr,k);
     }
}

56) Binary Search an array(if element found print index,otherwise -1)


import java.util.Scanner;
public class Basics{

     public static void binarySearch(int arr[] , int key){
               int low=0;
               int high=arr.length-1;
               while(low<=high){
                    int mid=(low+high)/2;
                    if(arr[mid]==key){
                         System.out.println(mid);
                         return;
                    }
                    if(arr[mid]>key){
                         high=mid-1;
                    }
                    else{
                         low=mid+1;
                    }
               }
               System.out.println(-1);
          }
          
     public static void main(String[] args){
          Scanner sc = new Scanner(System.in);
          System.out.println("Enter array size");
          int arr[] = new int[sc.nextInt()];
          System.out.println("Enter array elements");
          for(int i=0;i<arr.length;i++){
               arr[i] = sc.nextInt();
          }
          System.out.println("Enter key value");
          int k= sc.nextInt();
          binarySearch(arr,k);
     }
}


57) Move all the negative elements on left side and positive elements on right side

import java.util.Scanner;
public class Basics{

     public static void shiftingArray(int arr[]){
          int left = 0;
          int right = arr.length-1;
          while(left<=right){
               if(arr[left]>0 && arr[right]>0){
                    right--;
               }
               else if(arr[left]<0 && arr[right]<0){
                    left++;
               }
               else if(arr[left]>0 && arr[right]<0){
                    int temp = arr[right];
                    arr[right] = arr[left];
                    arr[left] =temp;
                    left++;
                    right--;
               }
               else {
                    left++;
                    right--;
          }
     }
     for(int i=0;i<arr.length;i++){
          System.out.print(arr[i] + " ");
     }
}
     public static void main(String[] args) {
          int arr[] = {-12,11,-13,-5,6,-7,5,-3,11};
          shiftingArray(arr);
     }
}


58)Bubble Sort

import java.util.Scanner;
public class Basics{

     public static void bubbleSort(int arr[]){
          for(int i=0;i<(arr.length-1/2);i++){
               for(int j=0;j<arr.length-1-i;j++){
                    if(arr[j] > arr[j+1]){
                         int temp =arr[j];
                         arr[j] = arr[j+1];
                         arr[j+1] = temp;
                     }
               }
          }

          //printing array

          for(int i=0;i<arr.length;i++){
               System.out.print(arr[i] + " ");
          }
     }
     public static void main(String[] args) {
          int arr[] = {6,5,3,1,8,7,2,4};
          bubbleSort(arr);
     }
}

59) Median of Array

import java.util.*;
public class Basics{

     public static double medianArray(int arr[]){
          int length = arr.length;
          Arrays.sort(arr);
           //if array length is odd-return middle element
          if(length%2!=0){
               return arr[length / 2];
          }
          //if array length is even
          else{
               int middle1 = arr[length / 2-1];
               int middle2 = arr[length / 2];
               return (double) (middle1+middle2) / 2;
          }

     }
     public static void main(String[] args) {
          int arr[] = {6,5,3,1,8,9};
         double median =  medianArray(arr);
         System.out.println(median);
          }
     }

60) Given an array, input a number and print how many times it has appeared

import java.util.*;
public class Basics{

     public static void occArray(int arr[],int target){
          int count =0; //not present
          for(int i=0;i<arr.length;i++){
               if(target==arr[i]){
                    count++;
               }
          }
          System.out.print(count);
     }
     
     public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          int arr[] = {6,3,3,1,8,9};
          int target =sc.nextInt();
          occArray(arr, target);
          }
     }


61) Print how many times number has appeared in the array

import java.util.*;
public class Basics{
    public static void main(String[] args) {
        int arr[]={1,2,3,3,1,1,1,2,2,8,9};

        //Creating HashMap
        HashMap<Integer , Integer> map = new HashMap<>();
    
        //Inserting pairs in HashMap
       for(int num: arr){
          map.put(num,map.getOrDefault(num, 0) + 1);
       }  

       //print output
       for(Map.Entry<Integer, Integer> e : map.entrySet()){
        System.out.print(e.getKey() + "=" + e.getValue() );
        System.out.println();
       }

    }
}


//getOrDefault method is used to get the value mapped with specified key.
If no value is mapped with the provided key then the default value is returned
