//Calculate percentage

/*
import java.util.Scanner;
public class Basics{
    public static void main(String[] args) {
        Scanner sc =new Scanner(System.in);
        System.out.println("Enter array size");
        int n=sc.nextInt();
        float sum=0;
        int  marks[] = new int[n];
        for(int i=0;i<marks.length;i++){
            marks[i]=sc.nextInt();
        }
        for(int i=0;i<marks.length;i++){
            sum =sum+marks[i];
        }
        float percentage= (sum/n);
        System.out.println("percentage is:" + percentage);
        
    }
}
*/

//Change array values using function

/* 
import java.util.Scanner;
public class Basics{

    public static void updatearr(int arr[]){
        for(int i=0;i<arr.length;i++){
            arr[i]=100-arr[i];
        }
    }
    public static void main(String[] args) {
        Scanner sc =new Scanner(System.in);
        int arr[]={15,90,4};
        updatearr(arr);
        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i]+ " ");
        }
    }
}
*/

//Linear Search 

/* 
import java.util.Scanner;
public class Basics{

    public static void linearsearch(int arr[],int key){
        for(int i=0;i<arr.length;i++){
            if(arr[i]==key){
                System.out.println("Key Found at index : " + i );
                return;
            }
        }
        System.out.println("Not found");
    }
    public static void main(String[] args) {
        Scanner sc =new Scanner(System.in);
        int arr[]={10,9,18,3,64};
        int key =6;
        linearsearch(arr,key);
    }
}
*/

//Print largest number in array


// import java.util.Scanner;
// public class Basics{
    
//     public static void largestnumber(int arr[]){
//         int max = arr[0];
//         for(int i=1;i<arr.length;i++){
//             if(arr[i]>max){
//                 max=arr[i];
//             }
//         }
//         System.out.println("Maximum:" + max);
        
    
//         int max =Integer.MIN_VALUE;
//         for(int i=0 ;i<arr.length;i++){
//             if(arr[i]>max){
//                 max=arr[i];
//             }

//            // max = Math.max(max,arr[i]);
//         }
//         System.out.println(max);
//     }
//     public static void main(String[] args) {
//     int arr[]={10,9,18,3,64};
//     largestnumber(arr);
//     }
// }

//print smallest number in array

/* 

import java.util.Scanner;
public class Basics{
    
    public static void Smallestnumber(int arr[]){
        // int min = arr[0];
        // for(int i=1;i<arr.length;i++){
        //     if(arr[i]<min){
        //         min=arr[i];
        //     }
        // }
        // System.out.println("Minimum:" + min);
        
    
        int min =Integer.MAX_VALUE;
         for(int i=0 ;i<arr.length;i++){
        // if(arr[i]<min){
        //   min=arr[i];
        // }

           min = Math.min(min,arr[i]);
          
        }
        System.out.println("minimum:" + min);
    }
    
    
    public static void main(String[] args) {
    int arr[]={10,9,18,3,64};
    Smallestnumber(arr);
    }
}
*/


//Binary search in array

/* 
import java.util.*;
public class Basics{

    public static void binarysearch(int binary[],int key){
        int low= 0;
        int high= binary.length-1;
        while(low<=high){
            int mid = (low+high)/2;
            if(binary[mid]==key){
                System.out.println("Key found at index:" + mid);
                return;
            }
            if(binary[mid]>key){
                high =mid-1;
            }
            else{
                low=mid+1;
            }
        }
        System.out.println("Not found");
    }
    public static void main(String args[]){
        int binary[]= {3,6,9,11,33};
        int key = 66;
        binarysearch(binary,key);
    }
}
*/

//Reverse an array

/* 
import java.util.*;
public class Basics{
    public static void Reversearray(int arr[]){
        int start =0;
        int end =arr.length-1;
        int temp =0;
        for(int i=0;i<arr.length/2;i++){
            temp = arr[end];
            arr[end] =arr[start];
            arr[start] =temp;
            start++;
            end--;
        }
    }
    public static void main(String args[]){
      int arr[] = {5,3,1,2,4};
      Reversearray(arr);
      for(int i=0;i<arr.length;i++){
        System.out.print(arr[i] + " ");
      }
    }
}
*/

//another way

/*import java.util.*;
public class Basics{
    public static void main(String[] args) {
        int arr[] = {5,2,3,7,1};
        int n=arr.length;
        for(int i=0;i<n/2;i++){
            arr[i]=arr[n-i-1] ^ arr[i];
            arr[n-i-1] =arr[n-i-1] ^ arr[i];
            arr[i] =arr[n-i-1] ^ arr[i];
        }
        for(int i=0;i<n;i++){
            System.out.print(arr[i] + " ");
        }
    }
}
*/


//Pairs in an Array

import java.util.Scanner;
public class Basics{

    public static void pairsarr(int arr[]){
        for(int i=0;i<arr.length;i++){
            for(int j=i+1;j<arr.length;j++){
                System.out.print("(" + arr[i] + "," + arr[j] + ")" + " ");
            }
            System.out.println();
        }
    }
    public static void main(String[] args) {
        int arr[]={1,2,3,4,5};
        pairsarr(arr);
    }
}

more optimised:- i=arr.length-1
import java.util.Scanner;
public class Basics{

    public static void pairsarr(int arr[]){
        for(int i=0;i<arr.length-1;i++){
            for(int j=i+1;j<arr.length;j++){
                System.out.print("(" + arr[i] + "," + arr[j] + ")" + " ");
            }
            System.out.println();
        }
    }
    public static void main(String[] args) {
        int arr[]={1,2,3,4,5};
        pairsarr(arr);
    }
}

//Print subarrays

import java.util.Scanner;
public class Basics{

    public static void subarr(int arr[]){
        for(int i=0;i<arr.length;i++){
            for(int j=i;j<arr.length;j++){
                System.out.print("(");
                for(int k=i;k<=j;k++){
                    System.out.print(arr[k] + ",");
                }
                System.out.print(")");
            }
            System.out.println();
        }
    }
    public static void main(String[] args) {
        int arr[]={2,4,6,8,10};
        subarr(arr);
    }
}


//Maximum sum Subarray =O(ncube)

import java.util.Scanner;
public class Basics{

    public static void subarr(int arr[]){
        int maxsum=0;
        for(int i=0;i<arr.length;i++){
            for(int j=i;j<arr.length;j++){
                int sum=0;
                for(int k=i;k<=j;k++){
                   sum= arr[k] + sum;
                }
                maxsum= Math.max(maxsum, sum);
            }
        }
        System.out.println(maxsum);
    }
    public static void main(String[] args) {
        int arr[]={2,4,6,8,10};
        subarr(arr);
    }
}
